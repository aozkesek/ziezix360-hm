/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.ziezix360.hm;

import static java.lang.System.out;
import static java.lang.System.in;

import org.hsqldb.Server;
import org.hsqldb.persist.HsqlProperties;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;

public class HMApp {

    public static void main(String[] args) {

        HsqlProperties hsqlProperties = new HsqlProperties();
        hsqlProperties.setProperty("server.database.0", "file:dbdata/hm");
        hsqlProperties.setProperty("server.dbname.0", "hm");

        Server hsqlServer = new Server();
        try {
            hsqlServer.setProperties(hsqlProperties);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        hsqlServer.setLogWriter(null);
        hsqlServer.setErrWriter(null);

        hsqlServer.start();

        try {
            Connection conn = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/hm", "SA", "");

            Statement stmt = conn.createStatement();

            try {
                out.println("creating schema...");
                stmt.execute("CREATE SCHEMA HM");
                out.println("creating users table...");
                stmt.execute("create table HM.USERS ( "+
                        "ID INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "+
                        "USER_NAME CHAR(64), "+
                        "GROUP_ID INT, "+
                        "NAME CHAR(64), "+
                        "SURNAME CHAR(64), "+
                        "HASHED_SECRET CHAR(64))");
                out.println("creating patients table...");
                stmt.execute("create table HM.PATIENTS ("+
                        "ID INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "+
                        "INSURANCE_NUMBER INT, "+
                        "NATIONAL_ID INT UNIQUE, "+
                        "NAME CHAR(64), "+
                        "SURNAME CHAR(64), "+
                        "DATE_OF_BIRTH DATE, "+
                        "PLACE_OF_BIRTH CHAR(64), "+
                        "FATHER_NAME CHAR(64), "+
                        "MOTHER_NAME CHAR(64))");
                out.println("filling data...");
                stmt.execute("INSERT INTO HM.USERS (USER_NAME,GROUP_ID,NAME,SURNAME,HASHED_SECRET) "+
                        "VALUES ('AHMOZK',1,'AHMET','OZKESEK','AB12')");
                stmt.execute("INSERT INTO HM.USERS (USER_NAME,GROUP_ID,NAME,SURNAME,HASHED_SECRET) "+
                        "VALUES ('PAUJUS',1,'PAUL','JUSTUS','CD34')");
                stmt.execute("INSERT INTO HM.PATIENTS "+
                        "(INSURANCE_NUMBER,NATIONAL_ID,NAME,SURNAME,DATE_OF_BIRTH,PLACE_OF_BIRTH,FATHER_NAME,MOTHER_NAME)"+
                        " VALUES (1,1,'AHMET','OZKESEK','1960-01-01','TURKEI','FATHER','MOTHER')");
                stmt.execute("INSERT INTO HM.PATIENTS ("+
                        "INSURANCE_NUMBER,NATIONAL_ID,NAME,SURNAME,DATE_OF_BIRTH,PLACE_OF_BIRTH,FATHER_NAME,MOTHER_NAME)"+
                        " VALUES (2,2,'PAUL','JUSTUS','1970-01-01','NIGER','FATHER','MOTHER')");
                out.println("creating db user...");
                stmt.execute("CREATE USER ZIEZIX PASSWORD ZZ360");
                out.println("creating user role...");
                stmt.execute("CREATE ROLE HMUSER");
                out.println("granting user...");
                stmt.execute("GRANT HMUSER TO ZIEZIX");
                stmt.execute("GRANT SELECT, UPDATE, INSERT ON TABLE HM.PATIENTS TO HMUSER");
                stmt.execute("GRANT SELECT ON TABLE HM.USERS TO HMUSER");
                out.println("done.");

            } catch (Exception ex) {
                ex.printStackTrace();
            }


            stmt.close();

            conn.close();

        } catch (Exception ex) {
            ex.printStackTrace();
        }

        int readed = 0;
        while (readed != 100) {

            try {
                out.println("press <d>, then <enter> for EXIT!");
                readed = in.read();
                out.println(readed);
                Thread.sleep(200);
            } catch (InterruptedException | IOException e) {
                e.printStackTrace();
            }
        }

        hsqlServer.shutdownCatalogs(1);

    }
}

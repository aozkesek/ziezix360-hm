/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.ziezix360hm;

import org.dom4j.rule.Mode;
import org.hibernate.SessionFactory;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.SessionFactoryBuilder;
import org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;
import org.hsqldb.persist.HsqlProperties;
import org.hsqldb.server.Server;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.List;

import static java.lang.System.out;
import static org.junit.Assert.*;

public class DaoTest {

    Server hsqlServer;
    SessionFactory sessionFactory;

    @Before public void startServer() {
        HsqlProperties props = new HsqlProperties();
        props.setProperty("server.database.0", "file:dbdata/hm");
        props.setProperty("server.dbname.0", "hm");

        hsqlServer = new Server();
        hsqlServer.setLogWriter(null);
        hsqlServer.setErrWriter(null);

        try {
            hsqlServer.setProperties(props);
            hsqlServer.start();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        initSchema();

        buildSessionFactory();

    }

    void buildSessionFactory() {
        Configuration config = new Configuration()
                .setProperty("hibernate.dialect", "org.hibernate.dialect.H2Dialect")
                .setProperty("hibernate.connection.url", "jdbc:hsqldb:hsql://localhost/hm")
                .setProperty("hibernate.connection.username", "SA")
                .setProperty("hibernate.connection.password", "")
                .addAnnotatedClass(ModelTest.class);

        sessionFactory = config.buildSessionFactory();

    }

    void initSchema() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/hm", "SA", "");

            Statement stmt = conn.createStatement();

            try {
                try {
                    out.println("dropping user...");
                    stmt.execute("DROP USER ZIEZIX");
                    out.println("dropping role...");
                    stmt.execute("DROP ROLE HMUSER");
                    out.println("dropping table...");
                    stmt.execute("DROP TABLE HM.PATIENTS");
                    out.println("dropping schema...");
                    stmt.execute("DROP SCHEMA HM");

                } catch(Exception ex) {
                    ex.printStackTrace();
                }

                out.println("creating schema...");
                stmt.execute("CREATE SCHEMA HM");
                out.println("creating patients table...");
                stmt.execute("create table HM.PATIENTS ("+
                        "ID INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "+
                        "INSURANCE_NUMBER INT, "+
                        "NATIONAL_ID INT UNIQUE, "+
                        "NAME CHAR(64), "+
                        "DATE_OF_BIRTH DATE, "+
                        "MOTHER_NAME CHAR(64))");
                out.println("filling data...");
                stmt.execute("INSERT INTO HM.PATIENTS "+
                        "(INSURANCE_NUMBER,NATIONAL_ID,NAME,DATE_OF_BIRTH,MOTHER_NAME)"+
                        " VALUES (1,1,'AHMET','1960-01-01','MOTHER')");
                stmt.execute("INSERT INTO HM.PATIENTS "+
                        "(INSURANCE_NUMBER,NATIONAL_ID,NAME,DATE_OF_BIRTH,MOTHER_NAME)"+
                        " VALUES (2,2,'PAUL','1970-01-01','MOTHER')");
                stmt.execute("INSERT INTO HM.PATIENTS "+
                        "(INSURANCE_NUMBER,NATIONAL_ID,NAME,DATE_OF_BIRTH,MOTHER_NAME)"+
                        " VALUES (3,3,'PAUL3','1970-01-01','MOTHER3')");
                stmt.execute("INSERT INTO HM.PATIENTS "+
                        "(INSURANCE_NUMBER,NATIONAL_ID,NAME,DATE_OF_BIRTH,MOTHER_NAME)"+
                        " VALUES (4,4,'PAUL4','1970-01-01','MOTHER4')");
                out.println("creating db user...");
                stmt.execute("CREATE USER ZIEZIX PASSWORD ZZ360");
                out.println("creating user role...");
                stmt.execute("CREATE ROLE HMUSER");
                out.println("granting user...");
                stmt.execute("GRANT HMUSER TO ZIEZIX");
                stmt.execute("GRANT SELECT, UPDATE, INSERT ON TABLE HM.PATIENTS TO HMUSER");
                out.println("done.");

            } catch (Exception ex) {
                ex.printStackTrace();
            }


            stmt.close();

            conn.close();

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    @After public void shutdownServer() {
        if (hsqlServer == null || hsqlServer.isNotRunning())
            return;

        hsqlServer.shutdownCatalogs(1);

    }

    @Test public void testCreate() {

        Dao<ModelTest> dao = new DaoTestImpl();
        ((DaoTestImpl) dao).setSessionFactory(sessionFactory);

        List<ModelTest> models = dao.list();
        models.forEach(modelTest -> out.println(modelTest));


    }


}
